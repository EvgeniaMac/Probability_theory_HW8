import numpy as np
from scipy import stats
# Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
# а затем с использованием функций из библиотек.
# Посчитать корреляцию Спирмена с помощью функции

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])
cov1 = np.mean(zp * ks) - np.mean(zp) * np.mean(ks)
print('Задача 1:''\n')
print(f'ковариация вручную: {cov1}')
print(f'ковариация с пом.функции: {np.cov(zp, ks, ddof=0)}''\n')
print(f'Пирсон с пом.ковариации и сигм: {cov1 / (np.std(zp, ddof=0) * np.std(ks, ddof=0))}')
print(f'Пирсон функция: {np.corrcoef(zp, ks)}''\n')
print(f'Спирман функция: {stats.spearmanr(zp, ks)}''\n')

# Измерены значения IQ выборки студентов,
# обучающихся в местных технических вузах:
# 131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
# Известно, что в генеральной совокупности IQ распределен нормально.
# Найдите доверительный интервал для математического ожидания с надежностью 0.95.

iq=np.array([131, 125, 115, 122, 131, 115, 107, 99, 125, 111])
alfa=0.05
n=len(iq)
d=np.var(iq, ddof=1)
m=np.mean(iq)
t=stats.t.ppf(1-alfa/2, n-1)
print(f'Задача 2:[{m-t*np.sqrt(d/n)},{m+t*np.sqrt(d/n)}]''\n')

# Известно, что рост футболистов в сборной распределен нормально
# с дисперсией генеральной совокупности, равной 25 кв.см. Объем выборки равен 27,
# среднее выборочное составляет 174.2. Найдите доверительный интервал для математического
# ожидания с надежностью 0.95.

disp=25
sigma=np.sqrt(disp)
ob=27
mu=174.2
z=1.96
print(f'Задача 3:[{mu-z*np.sqrt(sigma/ob)},{mu+z*np.sqrt(sigma/ob)}]''\n')